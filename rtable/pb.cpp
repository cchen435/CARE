// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: care.proto

#include "pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_care_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_care_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_care_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FunctionTy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_care_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Record;
}  // namespace protobuf_care_2eproto
namespace pb {
class Type_StructTyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_StructTy>
      _instance;
} _Type_StructTy_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
  ::google::protobuf::int32 width_;
  const ::pb::Type* pointeety_;
  const ::pb::Type_StructTy* memberty_;
  const ::pb::Type* arrayelemty_;
} _Type_default_instance_;
class FunctionTyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionTy>
      _instance;
} _FunctionTy_default_instance_;
class RecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Record>
      _instance;
} _Record_default_instance_;
class TableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Table>
      _instance;
} _Table_default_instance_;
}  // namespace pb
namespace protobuf_care_2eproto {
static void InitDefaultsType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Type_StructTy_default_instance_;
    new (ptr) ::pb::Type_StructTy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::pb::_Type_default_instance_;
    new (ptr) ::pb::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Type_StructTy::InitAsDefaultInstance();
  ::pb::Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType}, {}};

static void InitDefaultsFunctionTy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_FunctionTy_default_instance_;
    new (ptr) ::pb::FunctionTy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::FunctionTy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FunctionTy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFunctionTy}, {
      &protobuf_care_2eproto::scc_info_Type.base,}};

static void InitDefaultsRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Record_default_instance_;
    new (ptr) ::pb::Record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Record =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecord}, {
      &protobuf_care_2eproto::scc_info_FunctionTy.base,}};

static void InitDefaultsTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Table_default_instance_;
    new (ptr) ::pb::Table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Table::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Table =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTable}, {
      &protobuf_care_2eproto::scc_info_Record.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FunctionTy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Record.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Table.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type_StructTy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type_StructTy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type_StructTy, elemty_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type, id_),
  offsetof(::pb::TypeDefaultTypeInternal, width_),
  offsetof(::pb::TypeDefaultTypeInternal, pointeety_),
  offsetof(::pb::TypeDefaultTypeInternal, memberty_),
  offsetof(::pb::TypeDefaultTypeInternal, arrayelemty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Type, SubclassData_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FunctionTy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FunctionTy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FunctionTy, returnty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FunctionTy, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FunctionTy, paramty_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Record, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Record, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Record, functy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Record, parameters_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Table, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Table, records_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::pb::Type_StructTy)},
  { 7, 18, sizeof(::pb::Type)},
  { 23, 31, sizeof(::pb::FunctionTy)},
  { 34, 42, sizeof(::pb::Record)},
  { 45, 51, sizeof(::pb::Table)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Type_StructTy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_FunctionTy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Table_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "care.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ncare.proto\022\002pb\"\314\001\n\004Type\022\026\n\002ID\030\001 \002(\0162\n."
      "pb.TypeID\022\017\n\005Width\030\002 \001(\005H\000\022\035\n\tPointeeTy\030"
      "\003 \001(\0132\010.pb.TypeH\000\022%\n\010MemberTy\030\004 \001(\0132\021.pb"
      ".Type.StructTyH\000\022\037\n\013ArrayElemTy\030\005 \001(\0132\010."
      "pb.TypeH\000\032$\n\010StructTy\022\030\n\006ElemTy\030\001 \003(\0132\010."
      "pb.TypeB\016\n\014SubclassData\"R\n\nFunctionTy\022\032\n"
      "\010ReturnTy\030\001 \002(\0132\010.pb.Type\022\r\n\005fname\030\002 \002(\t"
      "\022\031\n\007ParamTy\030\003 \003(\0132\010.pb.Type\"I\n\006Record\022\013\n"
      "\003key\030\001 \002(\014\022\036\n\006FuncTy\030\002 \002(\0132\016.pb.Function"
      "Ty\022\022\n\nparameters\030\003 \003(\t\"$\n\005Table\022\033\n\007recor"
      "ds\030\001 \003(\0132\n.pb.Record*\233\002\n\006TypeID\022\014\n\010VoidT"
      "yID\020\000\022\014\n\010HalfTyID\020\001\022\r\n\tFloatTyID\020\002\022\016\n\nDo"
      "ubleTyID\020\003\022\020\n\014X86_FP80TyID\020\004\022\r\n\tFP128TyI"
      "D\020\005\022\021\n\rPPC_FP128TyID\020\006\022\r\n\tLabelTyID\020\007\022\020\n"
      "\014MetadataTyID\020\010\022\017\n\013X86_MMXTyID\020\t\022\r\n\tToke"
      "nTyID\020\n\022\017\n\013IntegerTyID\020\013\022\020\n\014FunctionTyID"
      "\020\014\022\016\n\nStructTyID\020\r\022\r\n\tArrayTyID\020\016\022\017\n\013Poi"
      "nterTyID\020\017\022\016\n\nVectorTyID\020\020"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 706);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "care.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_care_2eproto
namespace pb {
const ::google::protobuf::EnumDescriptor* TypeID_descriptor() {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_care_2eproto::file_level_enum_descriptors[0];
}
bool TypeID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Type_StructTy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_StructTy::kElemTyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_StructTy::Type_StructTy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_care_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Type.StructTy)
}
Type_StructTy::Type_StructTy(const Type_StructTy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      elemty_(from.elemty_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.Type.StructTy)
}

void Type_StructTy::SharedCtor() {
}

Type_StructTy::~Type_StructTy() {
  // @@protoc_insertion_point(destructor:pb.Type.StructTy)
  SharedDtor();
}

void Type_StructTy::SharedDtor() {
}

void Type_StructTy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_StructTy::descriptor() {
  ::protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_StructTy& Type_StructTy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_care_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_StructTy::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Type.StructTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elemty_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Type_StructTy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Type.StructTy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Type ElemTy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elemty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Type.StructTy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Type.StructTy)
  return false;
#undef DO_
}

void Type_StructTy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Type.StructTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Type ElemTy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elemty_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->elemty(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Type.StructTy)
}

::google::protobuf::uint8* Type_StructTy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Type.StructTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Type ElemTy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elemty_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->elemty(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Type.StructTy)
  return target;
}

size_t Type_StructTy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Type.StructTy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pb.Type ElemTy = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->elemty_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elemty(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_StructTy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Type.StructTy)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_StructTy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_StructTy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Type.StructTy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Type.StructTy)
    MergeFrom(*source);
  }
}

void Type_StructTy::MergeFrom(const Type_StructTy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Type.StructTy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elemty_.MergeFrom(from.elemty_);
}

void Type_StructTy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Type.StructTy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_StructTy::CopyFrom(const Type_StructTy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Type.StructTy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_StructTy::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->elemty())) return false;
  return true;
}

void Type_StructTy::Swap(Type_StructTy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_StructTy::InternalSwap(Type_StructTy* other) {
  using std::swap;
  CastToBase(&elemty_)->InternalSwap(CastToBase(&other->elemty_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_StructTy::GetMetadata() const {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type::InitAsDefaultInstance() {
  ::pb::_Type_default_instance_.width_ = 0;
  ::pb::_Type_default_instance_.pointeety_ = const_cast< ::pb::Type*>(
      ::pb::Type::internal_default_instance());
  ::pb::_Type_default_instance_.memberty_ = const_cast< ::pb::Type_StructTy*>(
      ::pb::Type_StructTy::internal_default_instance());
  ::pb::_Type_default_instance_.arrayelemty_ = const_cast< ::pb::Type*>(
      ::pb::Type::internal_default_instance());
}
void Type::set_allocated_pointeety(::pb::Type* pointeety) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_SubclassData();
  if (pointeety) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pointeety = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pointeety, submessage_arena);
    }
    set_has_pointeety();
    SubclassData_.pointeety_ = pointeety;
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Type.PointeeTy)
}
void Type::set_allocated_memberty(::pb::Type_StructTy* memberty) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_SubclassData();
  if (memberty) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memberty = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memberty, submessage_arena);
    }
    set_has_memberty();
    SubclassData_.memberty_ = memberty;
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Type.MemberTy)
}
void Type::set_allocated_arrayelemty(::pb::Type* arrayelemty) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_SubclassData();
  if (arrayelemty) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arrayelemty = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arrayelemty, submessage_arena);
    }
    set_has_arrayelemty();
    SubclassData_.arrayelemty_ = arrayelemty;
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Type.ArrayElemTy)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kIDFieldNumber;
const int Type::kWidthFieldNumber;
const int Type::kPointeeTyFieldNumber;
const int Type::kMemberTyFieldNumber;
const int Type::kArrayElemTyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_care_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  clear_has_SubclassData();
  switch (from.SubclassData_case()) {
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kPointeeTy: {
      mutable_pointeety()->::pb::Type::MergeFrom(from.pointeety());
      break;
    }
    case kMemberTy: {
      mutable_memberty()->::pb::Type_StructTy::MergeFrom(from.memberty());
      break;
    }
    case kArrayElemTy: {
      mutable_arrayelemty()->::pb::Type::MergeFrom(from.arrayelemty());
      break;
    }
    case SUBCLASSDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pb.Type)
}

void Type::SharedCtor() {
  id_ = 0;
  clear_has_SubclassData();
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:pb.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  if (has_SubclassData()) {
    clear_SubclassData();
  }
}

void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_care_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type::clear_SubclassData() {
// @@protoc_insertion_point(one_of_clear_start:pb.Type)
  switch (SubclassData_case()) {
    case kWidth: {
      // No need to clear
      break;
    }
    case kPointeeTy: {
      delete SubclassData_.pointeety_;
      break;
    }
    case kMemberTy: {
      delete SubclassData_.memberty_;
      break;
    }
    case kArrayElemTy: {
      delete SubclassData_.arrayelemty_;
      break;
    }
    case SUBCLASSDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBCLASSDATA_NOT_SET;
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  clear_SubclassData();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.TypeID ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TypeID_IsValid(value)) {
            set_id(static_cast< ::pb::TypeID >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_SubclassData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &SubclassData_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.Type PointeeTy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointeety()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.Type.StructTy MemberTy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memberty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.Type ArrayElemTy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arrayelemty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pb.TypeID ID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  switch (SubclassData_case()) {
    case kWidth:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
      break;
    case kPointeeTy:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_pointeety(), output);
      break;
    case kMemberTy:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_memberty(), output);
      break;
    case kArrayElemTy:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_arrayelemty(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pb.TypeID ID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  switch (SubclassData_case()) {
    case kWidth:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
      break;
    case kPointeeTy:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_pointeety(), deterministic, target);
      break;
    case kMemberTy:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_memberty(), deterministic, target);
      break;
    case kArrayElemTy:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_arrayelemty(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Type)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .pb.TypeID ID = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }
  switch (SubclassData_case()) {
    // optional int32 Width = 2;
    case kWidth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
      break;
    }
    // optional .pb.Type PointeeTy = 3;
    case kPointeeTy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *SubclassData_.pointeety_);
      break;
    }
    // optional .pb.Type.StructTy MemberTy = 4;
    case kMemberTy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *SubclassData_.memberty_);
      break;
    }
    // optional .pb.Type ArrayElemTy = 5;
    case kArrayElemTy: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *SubclassData_.arrayelemty_);
      break;
    }
    case SUBCLASSDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
  switch (from.SubclassData_case()) {
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kPointeeTy: {
      mutable_pointeety()->::pb::Type::MergeFrom(from.pointeety());
      break;
    }
    case kMemberTy: {
      mutable_memberty()->::pb::Type_StructTy::MergeFrom(from.memberty());
      break;
    }
    case kArrayElemTy: {
      mutable_arrayelemty()->::pb::Type::MergeFrom(from.arrayelemty());
      break;
    }
    case SUBCLASSDATA_NOT_SET: {
      break;
    }
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (SubclassData_case()) {
    case kWidth: {
      break;
    }
    case kPointeeTy: {
      if (has_pointeety()) {
        if (!this->pointeety().IsInitialized()) return false;
      }
      break;
    }
    case kMemberTy: {
      if (has_memberty()) {
        if (!this->memberty().IsInitialized()) return false;
      }
      break;
    }
    case kArrayElemTy: {
      if (has_arrayelemty()) {
        if (!this->arrayelemty().IsInitialized()) return false;
      }
      break;
    }
    case SUBCLASSDATA_NOT_SET: {
      break;
    }
  }
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(SubclassData_, other->SubclassData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionTy::InitAsDefaultInstance() {
  ::pb::_FunctionTy_default_instance_._instance.get_mutable()->returnty_ = const_cast< ::pb::Type*>(
      ::pb::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionTy::kReturnTyFieldNumber;
const int FunctionTy::kFnameFieldNumber;
const int FunctionTy::kParamTyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionTy::FunctionTy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_care_2eproto::scc_info_FunctionTy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FunctionTy)
}
FunctionTy::FunctionTy(const FunctionTy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      paramty_(from.paramty_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  if (from.has_returnty()) {
    returnty_ = new ::pb::Type(*from.returnty_);
  } else {
    returnty_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.FunctionTy)
}

void FunctionTy::SharedCtor() {
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returnty_ = NULL;
}

FunctionTy::~FunctionTy() {
  // @@protoc_insertion_point(destructor:pb.FunctionTy)
  SharedDtor();
}

void FunctionTy::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete returnty_;
}

void FunctionTy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FunctionTy::descriptor() {
  ::protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionTy& FunctionTy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_care_2eproto::scc_info_FunctionTy.base);
  return *internal_default_instance();
}


void FunctionTy::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FunctionTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramty_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      fname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(returnty_ != NULL);
      returnty_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FunctionTy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FunctionTy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.Type ReturnTy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returnty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string fname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.FunctionTy.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.Type ParamTy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_paramty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FunctionTy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FunctionTy)
  return false;
#undef DO_
}

void FunctionTy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FunctionTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pb.Type ReturnTy = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_returnty(), output);
  }

  // required string fname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FunctionTy.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fname(), output);
  }

  // repeated .pb.Type ParamTy = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paramty_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->paramty(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FunctionTy)
}

::google::protobuf::uint8* FunctionTy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FunctionTy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pb.Type ReturnTy = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_returnty(), deterministic, target);
  }

  // required string fname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FunctionTy.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fname(), target);
  }

  // repeated .pb.Type ParamTy = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paramty_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->paramty(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FunctionTy)
  return target;
}

size_t FunctionTy::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FunctionTy)
  size_t total_size = 0;

  if (has_fname()) {
    // required string fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());
  }

  if (has_returnty()) {
    // required .pb.Type ReturnTy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returnty_);
  }

  return total_size;
}
size_t FunctionTy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FunctionTy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string fname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());

    // required .pb.Type ReturnTy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returnty_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .pb.Type ParamTy = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->paramty_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->paramty(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionTy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FunctionTy)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionTy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionTy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FunctionTy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FunctionTy)
    MergeFrom(*source);
  }
}

void FunctionTy::MergeFrom(const FunctionTy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FunctionTy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paramty_.MergeFrom(from.paramty_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_returnty()->::pb::Type::MergeFrom(from.returnty());
    }
  }
}

void FunctionTy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FunctionTy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionTy::CopyFrom(const FunctionTy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FunctionTy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionTy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->paramty())) return false;
  if (has_returnty()) {
    if (!this->returnty_->IsInitialized()) return false;
  }
  return true;
}

void FunctionTy::Swap(FunctionTy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionTy::InternalSwap(FunctionTy* other) {
  using std::swap;
  CastToBase(&paramty_)->InternalSwap(CastToBase(&other->paramty_));
  fname_.Swap(&other->fname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(returnty_, other->returnty_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FunctionTy::GetMetadata() const {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Record::InitAsDefaultInstance() {
  ::pb::_Record_default_instance_._instance.get_mutable()->functy_ = const_cast< ::pb::FunctionTy*>(
      ::pb::FunctionTy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Record::kKeyFieldNumber;
const int Record::kFuncTyFieldNumber;
const int Record::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Record::Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_care_2eproto::scc_info_Record.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Record)
}
Record::Record(const Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      parameters_(from.parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_functy()) {
    functy_ = new ::pb::FunctionTy(*from.functy_);
  } else {
    functy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.Record)
}

void Record::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  functy_ = NULL;
}

Record::~Record() {
  // @@protoc_insertion_point(destructor:pb.Record)
  SharedDtor();
}

void Record::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete functy_;
}

void Record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Record::descriptor() {
  ::protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Record& Record::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_care_2eproto::scc_info_Record.base);
  return *internal_default_instance();
}


void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(functy_ != NULL);
      functy_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .pb.FunctionTy FuncTy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_functy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string parameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_parameters()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parameters(this->parameters_size() - 1).data(),
            static_cast<int>(this->parameters(this->parameters_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Record.parameters");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Record)
  return false;
#undef DO_
}

void Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required .pb.FunctionTy FuncTy = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_functy(), output);
  }

  // repeated string parameters = 3;
  for (int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameters(i).data(), static_cast<int>(this->parameters(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Record.parameters");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->parameters(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Record)
}

::google::protobuf::uint8* Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required .pb.FunctionTy FuncTy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_functy(), deterministic, target);
  }

  // repeated string parameters = 3;
  for (int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameters(i).data(), static_cast<int>(this->parameters(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Record.parameters");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->parameters(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Record)
  return target;
}

size_t Record::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.Record)
  size_t total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_functy()) {
    // required .pb.FunctionTy FuncTy = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *functy_);
  }

  return total_size;
}
size_t Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Record)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required .pb.FunctionTy FuncTy = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *functy_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string parameters = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  for (int i = 0, n = this->parameters_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->parameters(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Record)
    MergeFrom(*source);
  }
}

void Record::MergeFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_functy()->::pb::FunctionTy::MergeFrom(from.functy());
    }
  }
}

void Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Record::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_functy()) {
    if (!this->functy_->IsInitialized()) return false;
  }
  return true;
}

void Record::Swap(Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Record::InternalSwap(Record* other) {
  using std::swap;
  parameters_.InternalSwap(CastToBase(&other->parameters_));
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(functy_, other->functy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Table::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_care_2eproto::scc_info_Table.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Table)
}
Table::Table(const Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.Table)
}

void Table::SharedCtor() {
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:pb.Table)
  SharedDtor();
}

void Table::SharedDtor() {
}

void Table::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  ::protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Table& Table::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_care_2eproto::scc_info_Table.base);
  return *internal_default_instance();
}


void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Table)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Record records = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Record records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->records(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Table)
}

::google::protobuf::uint8* Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Record records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->records(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Table)
  return target;
}

size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Table)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pb.Record records = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Table)
  GOOGLE_DCHECK_NE(&from, this);
  const Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  using std::swap;
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_care_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_care_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Type_StructTy* Arena::CreateMaybeMessage< ::pb::Type_StructTy >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Type_StructTy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Type* Arena::CreateMaybeMessage< ::pb::Type >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::FunctionTy* Arena::CreateMaybeMessage< ::pb::FunctionTy >(Arena* arena) {
  return Arena::CreateInternal< ::pb::FunctionTy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Record* Arena::CreateMaybeMessage< ::pb::Record >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Record >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Table* Arena::CreateMaybeMessage< ::pb::Table >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Table >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
